// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ehancup",
            "url": "http://www.swagger.io/support",
            "email": "rhanysuf24@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Login \t  with credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "login payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponse-any"
                        }
                    }
                }
            }
        },
        "/product/create/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create toko for 'user' role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register with credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponse-any"
                        }
                    }
                }
            }
        },
        "/store/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create toko for 'user' role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Create Toko (user)",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.CreateStoreReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponse-any"
                        }
                    }
                }
            }
        },
        "/store/detail/{id}": {
            "get": {
                "description": "Get detail store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponse-store_DetailStoreRes"
                        }
                    }
                }
            }
        },
        "/store/list-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get all toko with pagination for admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "get all toko (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponsePagination-store_ListAllStoreRes"
                        }
                    }
                }
            }
        },
        "/store/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get my toko with pagination for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "get my toko (user)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponsePagination-store_ListMyStoreRes"
                        }
                    }
                }
            }
        },
        "/store/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "update (owner)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/store.UpdateStoreReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/br.BaseSuccessResponse-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "tester@gmail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "auth.RegisterReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "tester@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "tester"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "br.BaseSuccessResponse-any": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Success bool   ` + "`" + `json:\"success\" binding:\"default:true\" example:\"true\"` + "`" + `"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "br.BaseSuccessResponse-store_DetailStoreRes": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Success bool   ` + "`" + `json:\"success\" binding:\"default:true\" example:\"true\"` + "`" + `",
                    "allOf": [
                        {
                            "$ref": "#/definitions/store.DetailStoreRes"
                        }
                    ]
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "br.BaseSuccessResponsePagination-store_ListAllStoreRes": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Success    bool               ` + "`" + `json:\"success\" binding:\"default:true\" example:\"true\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/store.DetailStoreRes"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/br.PaginationResponse"
                }
            }
        },
        "br.BaseSuccessResponsePagination-store_ListMyStoreRes": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Success    bool               ` + "`" + `json:\"success\" binding:\"default:true\" example:\"true\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/store.DetailStoreRes"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/br.PaginationResponse"
                }
            }
        },
        "br.PaginationResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "product.CreateProductReq": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "image": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "minLength": 4,
                    "example": "item"
                },
                "price": {
                    "type": "integer",
                    "example": 3000
                }
            }
        },
        "store.CreateStoreReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "this is example of desc."
                },
                "name": {
                    "type": "string",
                    "minLength": 4,
                    "example": "store"
                }
            }
        },
        "store.DetailStoreRes": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/store.LATRuser"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "store.LATRuser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "store.UpdateStoreReq": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "http://localhost:3000/public/propil.png"
                },
                "description": {
                    "type": "string",
                    "example": "this is example of desc."
                },
                "name": {
                    "type": "string",
                    "minLength": 4,
                    "example": "store"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Toko manajer",
	Description:      "This is a Gin Boilerplate for Rest API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
